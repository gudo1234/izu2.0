import Starlights from '@StarlightsTeam/Scraper'

const handler = async (m, { conn }) => {
  const tiktokRegex = /https?:\/\/(?:vt|vm|www)?\.?tiktok\.com\/[^\s]+/gi
  const matches = [...m.text.matchAll(tiktokRegex)]

  if (matches.length === 0) return

  for (const match of matches) {
    const url = match[0]

    try {
      m.react('üïí')

      const result = await Starlights.tiktokdl(url)
      if (!result || !result.dl_url) throw new Error('No se pudo obtener el video.')

      const caption = `‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚Ä¢ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n` +
                      `  ñ§ê \`TIKTOK EXTRACTOR\` ñ§ê\n` +
                      `‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ‚Ä¢ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\n\n` +
                      `‚ú¶ *T√≠tulo* : ${result.title}\n` +
                      `‚ú¶ *Autor* : ${result.author}\n` +
                      `‚ú¶ *Duraci√≥n* : ${result.duration} segundos\n` +
                      `‚ú¶ *Vistas* : ${result.views}\n` +
                      `‚ú¶ *Likes* : ${result.likes}\n` +
                      `‚ú¶ *Comentarios* : ${result.comment || result.comments_count}\n` +
                      `‚ú¶ *Compartidos* : ${result.share || result.share_count}\n` +
                      `‚ú¶ *Publicado* : ${result.published}\n` +
                      `‚ú¶ *Descargas* : ${result.downloads || result.download_count}\n\n` +
                      `> *${textbot}*`

      await conn.sendFile(m.chat, result.dl_url, 'tiktok.mp4', caption, m)
      await m.react('‚úÖ')
    } catch (err) {
      console.error(err)
      await m.react('‚ùå')
      await m.reply(`‚ùå Error al descargar video de TikTok:\n${err.message}`)
    }
  }
}

// Detecta autom√°ticamente enlaces de TikTok en cualquier mensaje del grupo
handler.customPrefix = /https?:\/\/(?:vt|vm|www)?\.?tiktok\.com\/[^\s]+/i
handler.command = new RegExp
handler.group = true
export default handler
